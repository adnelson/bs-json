/*
    Handling an object with dynamic keys for sub-objects.
    example:
    {
        static: "hello",
        dynamics: {
            "undetermined1": 2
            "undetermined2": 6
        }
    }

    Where the "undetermined" keys, are unknown at compile time.
    Could be dynamic JS keys generated by user or generally at run time.
*/

type obj = {
  static: string,
  dynamics: Js.Dict.t<int>,
}

module Decode = {
  let obj = json => {
    open Json.Decode
    {
      static: field("static", string)(json),
      dynamics: field("dynamics", dict(int))(json),
    }
  }
}

module Encode = {
  let obj = c => {
    open Json.Encode
    object_(list{("static", string(c.static)), ("dynamics", dict(int)(c.dynamics))})
  }
}

let data = ` {
  "static": "hi",
  "dynamics": { "hello": 5, "random": 8 }
} `

let decodedData = Decode.obj(Json.parseOrRaise(data))

/*
  Will log [ 'hi', { hello: 5, random: 8 } ]
*/
let _ = Js.log(decodedData)

/*
  Will log { static: 'hi', dynamics: { hello: 5, random: 8 } }
*/
let encodedDataBack = Js.log(Encode.obj(decodedData))
